# =========================================================
# 🖥️ Streamlit Frontend (music_recommender_ui)
# ---------------------------------------------------------
# 목적:
#  - FastAPI 백엔드로부터 데이터 수신 및 시각화
#  - 빌드 캐시 효율 & 이미지 크기 최소화
# =========================================================


# =========================================================
# 🧱 1️⃣ Builder Stage - Dependencies Installation
# ---------------------------------------------------------
# 별도 레이어에서 Python 패키지를 설치하여 캐시 재사용 극대화
# =========================================================
FROM python:3.10-slim AS builder

WORKDIR /install

# 🧩 필수 패키지만 설치 (curl for healthcheck/debug)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl && rm -rf /var/lib/apt/lists/*

# 📦 Streamlit 의존성 설치
COPY requirements_ui.txt .
RUN pip install --prefix=/install --no-cache-dir -r requirements_ui.txt


# =========================================================
# 🚀 2️⃣ Runtime Stage - Final Lightweight Image
# ---------------------------------------------------------
# Builder에서 설치된 패키지 레이어만 복사 (≈400MB → 150MB로 감소)
# =========================================================
FROM python:3.10-slim

# 💼 작업 디렉토리 설정
WORKDIR /app

# 🔁 Builder에서 설치된 패키지 복사
COPY --from=builder /install /usr/local

# 📂 애플리케이션 파일 복사
COPY web ./web
COPY .env ./.env

# 🧾 환경 변수
ENV PYTHONUNBUFFERED=1 \
    STREAMLIT_SERVER_PORT=8501 \
    STREAMLIT_SERVER_ADDRESS=0.0.0.0 \
    STREAMLIT_BROWSER_GATHER_USAGE_STATS=false

# 🔥 Streamlit 기본 포트
EXPOSE 8501

# ✅ Healthcheck (선택 사항)
HEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health || exit 1

# ▶️ Streamlit 실행
CMD ["streamlit", "run", "web/streamlit_app.py", \
     "--server.port=8501", \
     "--server.address=0.0.0.0"]
