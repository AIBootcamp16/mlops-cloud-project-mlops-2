# ============================================================
# üöÄ GitHub Actions: MLOps Music Recommender CI/CD Pipeline
# ============================================================

name: Build and Test (API & UI)

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io

permissions:
  contents: read
  packages: write

jobs:
  # ============================================================
  # üéµ 1Ô∏è‚É£ Build FastAPI Backend Image
  # ============================================================
  build-api:
    name: Build FastAPI (API)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment (.env)
        run: |
          cp .env.safe .env
          echo "SPOTIPY_CLIENT_ID=${{ secrets.SPOTIPY_CLIENT_ID }}" >> .env
          echo "SPOTIPY_CLIENT_SECRET=${{ secrets.SPOTIPY_CLIENT_SECRET }}" >> .env
          echo "MLFLOW_ADDR=http://mlops_runner:5000" >> .env

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build FastAPI Docker image
        run: |
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          docker build -f Dockerfile.api -t ghcr.io/${REPO_LC}-api:${GITHUB_REF_NAME} .

      - name: Run healthcheck
        run: |
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          docker run -d -p 8000:8000 --name api_test ghcr.io/${REPO_LC}-api:${GITHUB_REF_NAME}
          sleep 10
          curl -f http://localhost:8000/health || (docker logs api_test && exit 1)
          docker stop api_test

      - name: Push API image to GHCR
        run: |
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          docker push ghcr.io/${REPO_LC}-api:${GITHUB_REF_NAME}


  # ============================================================
  # üñ•Ô∏è 2Ô∏è‚É£ Build Streamlit Frontend Image
  # ============================================================
  build-ui:
    name: Build Streamlit (UI)
    runs-on: ubuntu-latest
    needs: build-api

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Streamlit Docker image
        run: |
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          docker build -f Dockerfile.ui -t ghcr.io/${REPO_LC}-ui:${GITHUB_REF_NAME} .

      - name: Run healthcheck
        run: |
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          docker run -d -p 8501:8501 --name ui_test ghcr.io/${REPO_LC}-ui:${GITHUB_REF_NAME}
          sleep 10
          curl -f http://localhost:8501 || (docker logs ui_test && exit 1)
          docker stop ui_test

      - name: Push UI image to GHCR
        run: |
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          docker push ghcr.io/${REPO_LC}-ui:${GITHUB_REF_NAME}
