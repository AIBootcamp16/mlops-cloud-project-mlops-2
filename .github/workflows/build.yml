# ============================================================
# 🚀 GitHub Actions: MLOps Music Recommender CI/CD Pipeline
# ------------------------------------------------------------
# 트리거:
#   - v* 태그 푸시 (예: v1.0.1-stable)
# 주요 기능:
#   - Spotify API Secrets 주입
#   - FastAPI / Streamlit Docker 이미지 빌드 및 테스트
#   - GHCR(gogoAiHunters 네임스페이스)에 업로드
# ============================================================

name: Build and Push to gogoAiHunters GHCR

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_API: gogoaihunter/mlops-cloud-project-mlops-2-api
  IMAGE_UI: gogoaihunter/mlops-cloud-project-mlops-2-ui

permissions:
  contents: read
  packages: write

jobs:
  # ============================================================
  # 🎵 1️⃣ Build FastAPI Backend Image
  # ============================================================
  build-api:
    name: Build FastAPI (API)
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Prepare environment (.env)
        run: |
          cp .env.safe .env || echo "⚠️ Using default safe env"
          echo "SPOTIPY_CLIENT_ID=${{ secrets.SPOTIPY_CLIENT_ID }}" >> .env
          echo "SPOTIPY_CLIENT_SECRET=${{ secrets.SPOTIPY_CLIENT_SECRET }}" >> .env
          echo "MLFLOW_ADDR=http://mlops_runner:5000" >> .env

      - name: 🔐 Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build FastAPI Docker image
        run: |
          docker build -f Dockerfile.api \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_API }}:${{ github.ref_name }} .

      - name: 🩺 Run API Healthcheck
        run: |
          docker run -d -p 8000:8000 --name api_test ${{ env.REGISTRY }}/${{ env.IMAGE_API }}:${{ github.ref_name }}
          sleep 10
          curl -f http://localhost:8000/health || (docker logs api_test && exit 1)
          docker stop api_test

      - name: 📦 Push API image to GHCR
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_API }}:${{ github.ref_name }}


  # ============================================================
  # 🖥️ 2️⃣ Build Streamlit Frontend Image
  # ============================================================
  build-ui:
    name: Build Streamlit (UI)
    runs-on: ubuntu-latest
    needs: build-api

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build Streamlit Docker image
        run: |
          docker build -f Dockerfile.ui \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_UI }}:${{ github.ref_name }} .

      - name: 🩺 Run UI Healthcheck
        run: |
          docker run -d -p 8501:8501 --name ui_test ${{ env.REGISTRY }}/${{ env.IMAGE_UI }}:${{ github.ref_name }}
          sleep 10
          curl -f http://localhost:8501 || (docker logs ui_test && exit 1)
          docker stop ui_test

      - name: 📦 Push UI image to GHCR
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_UI }}:${{ github.ref_name }}
