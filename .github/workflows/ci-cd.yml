name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]   # main 브랜치에 push 될 때 실행
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      EC2_HOST: ${{ env.EC2_HOST }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # 코드만 수정 시 → 컨테이너 volume에 mount된 코드로 배포, rebuild 생략
      - name: Decide if rebuild is needed
        id: rebuild
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -qE 'Dockerfile|requirements.txt'; then
            echo "REBUILD=true" >> $GITHUB_ENV
          else
            echo "REBUILD=false" >> $GITHUB_ENV
          fi
      ##############################################################

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image (if needed)
        if: env.REBUILD == 'true'
        run: |
          IMAGE_TAG="becky77/mlops:${GITHUB_SHA::8}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: (Debug) Check EC2 Host Value 
        run: echo "The EC2_HOST value is.. ${{ env.EC2_HOST }}"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}

          script: |
            cd /home/ubuntu/mlops-cloud-project-mlops-2
            if [ "${REBUILD}" == "true" ]; then
              docker pull $IMAGE_TAG
              docker compose down
              docker compose up -d --build
            else
              docker compose restart airflow
            fi