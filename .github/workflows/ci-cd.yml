name: CI/CD Pipeline

on:
  # pull_request:
  #   branches: [ "main" ]   # PR ÏÉùÏÑ± Ïãú ÏΩîÎìú ÌÖåÏä§Ìä∏ (CI)
  pull_request_target:
    branches: [ "main" ]
  push:
    branches: [ "main" ]   # main Î∏åÎûúÏπòÏóê merge ÌõÑ CD Ïã§Ìñâ

jobs:
  # -------------------------------
  # CI: Pull Request Ïãú ÏΩîÎìú Í≤ÄÏ¶ù
  # -------------------------------
  ci-test:
    runs-on: ubuntu-latest
    # if: github.event_name == 'pull_request' && github.repository == 'AIBootcamp16/mlops-cloud-project-mlops-2'
    if: github.event_name == 'pull_request_target'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies (skip if unchanged)
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -qE 'requirements.txt'; then
            pip install -r requirements.txt
          else
            echo "requirements.txt unchanged, skipping install"
          fi

      # Ï∫êÏãú keyÎäî requirements.txtÏùò Ìï¥ÏãúÎ•º Í∏∞Ï§ÄÏúºÎ°ú ÏÑ§Ï†ï
      # - name: Cache pip dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-

      # - name: Install dependencies (skip if unchanged)
      #   run: |
      #     pip install -r requirements.txt

      - name: Run lint and basic tests
        run: |
          echo "‚úÖ Running code validation..."
          python -m compileall .
          echo "‚úÖ Code syntax check passed."

      # Slack PR ÏïåÎ¶º
      - name: Notify Slack about PR
        if: always()
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": ":rocket: *ÏÉàÎ°úÏö¥ Pull RequestÍ∞Ä ÏûàÏäµÎãàÎã§*",
              "attachments": [
                {
                  "color": "#36a64f",
                  "fields": [
                    { "title": "Repository", "value": "${{ github.repository }}", "short": true },
                    { "title": "PR Title", "value": "${{ github.event.pull_request.title }}", "short": true },
                    { "title": "Author", "value": "${{ github.event.pull_request.user.login }}", "short": true },
                    { "title": "Status", "value": "${{ job.status }}", "short": true },
                    { "title": "View PR", "value": "${{ github.event.pull_request.html_url }}" }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # -------------------------------
  # CD: Merge ÌõÑ EC2Ïóê Î∞∞Ìè¨
  # -------------------------------
  cd-deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'AIBootcamp16/mlops-cloud-project-mlops-2'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Decide if rebuild is needed
        id: rebuild
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -qE 'Dockerfile|requirements.txt'; then
            echo "REBUILD=true" >> $GITHUB_ENV
          else
            echo "REBUILD=false" >> $GITHUB_ENV
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image (if needed)
        if: env.REBUILD == 'true'
        run: |
          IMAGE_TAG="becky77/mlops:${GITHUB_SHA::8}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/mlops-cloud-project-mlops-2
            echo "üîÑ Pulling latest code from main branch..."
            git fetch origin main
            git pull origin main
            if [ "${REBUILD}" == "true" ]; then
              docker pull $IMAGE_TAG
              docker compose down
              docker compose up -d --build
            else
              docker compose restart airflow
            fi
            echo "‚úÖ Deployment complete on EC2"

      # ‚úÖ Slack ÏïåÎ¶º (Î∞∞Ìè¨ ÏôÑÎ£å Ïãú)
      - name: Notify Slack - Deployment Complete
        if: always()
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": ":tada: *Î∞∞Ìè¨ ÏôÑÎ£å!*\nBranch: `${{ github.ref_name }}`\nRepository: `${{ github.repository }}`\nDeployed To: `EC2 - ${{ secrets.EC2_HOST }}`\nStatus: `${{ job.status }}`\nCommit: `${{ github.sha }}`\nAuthor: `${{ github.actor }}`\n<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|Go to commit>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     # ÏΩîÎìúÎßå ÏàòÏ†ï Ïãú ‚Üí Ïª®ÌÖåÏù¥ÎÑà volumeÏóê mountÎêú ÏΩîÎìúÎ°ú Î∞∞Ìè¨, rebuild ÏÉùÎûµ
  #     - name: Decide if rebuild is needed
  #       id: rebuild
  #       run: |
  #         if git diff --name-only HEAD~1 HEAD | grep -qE 'Dockerfile|requirements.txt'; then
  #           echo "REBUILD=true" >> $GITHUB_ENV
  #         else
  #           echo "REBUILD=false" >> $GITHUB_ENV
  #         fi
  #     ##############################################################

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Build and push Docker image (if needed)
  #       if: env.REBUILD == 'true'
  #       run: |
  #         IMAGE_TAG="becky77/mlops:${GITHUB_SHA::8}"
  #         echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
  #         docker build -t $IMAGE_TAG .
  #         docker push $IMAGE_TAG

  #     - name: (Debug) Check EC2 Host Value 
  #       run: echo "The EC2_HOST value is.. ${{ secrets.EC2_HOST }}"

  #     - name: Deploy to EC2
  #       uses: appleboy/ssh-action@v0.1.7
  #       if: github.ref == 'refs/heads/main'      # main Î∏åÎûúÏπò push ÏãúÎßå Ïã§Ìñâ
  #       with:
  #         host: ${{ secrets.EC2_HOST }}
  #         username: ubuntu
  #         key: ${{ secrets.EC2_SSH_KEY }}

  #         script: |
  #           cd /home/ubuntu/mlops-cloud-project-mlops-2
  #           if [ "${REBUILD}" == "true" ]; then
  #             docker pull $IMAGE_TAG
  #             docker compose down
  #             docker compose up -d --build
  #           else
  #             docker compose restart airflow
  #           fi